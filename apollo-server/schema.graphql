schema {
    query: Query
    mutation: Mutation
}

type Mutation {
    login(loginForm: LoginForm!): User!
    register(registerForm: RegisterForm!): User!
    addJob(userId: String!, jobForm: JobForm!): Job!
    updateJob(userId: String!, jobForm: JobForm!): Job!
    updateUser(userForm: UserForm!): User!
}

type Query {
    user(userId: String!): User!
    getJobs(page: Int!): JobsPage!
    getJobById(jobId: String!): Job!
    getUser(userId: String!): User!
    getUserIntro(userId: String!): UserIntro!
}

type JobsPage {
    jobs: [Job!]!
    totalPages: Int!
}

type Job {
    jobId: String!
    company: String!
    referer: String!
    requiredFields: [String!]!
    deadline: Date!
    expiration: Int!
    referredCount: Int!
    referTotal: Int!
    imageUrl: String
    source: String
}

type User {
    userId: String!
    jobId: String!
    email: String!
    experience: Int!
    intro: String
    leetCodeUrl: String
    name: String!
    phone: String
    resumeUrl: String
    thirdPersonIntro: String
}

type UserIntro {
    avatarUrl: String!
    name: String!
    finishedRefers: Int!
    totalRefers: Int!
    finishedResumes: Int!
    totalResumes: Int!
}

input LoginForm {
    email: String!
    password: String!
}

input RegisterForm {
    email: String!
    password: String!
}

input UserForm {
    userId: String!
    jobId: String!
    email: String!
    experience: Int!
    intro: String
    leetCodeUrl: String
    name: String!
    phone: String
    resumeUrl: String
    thirdPersonIntro: String
}

input JobForm {
    jobId: String!
    company: String!
    referer: String!
    requiredFields: [String!]!
    deadline: Date!
    expiration: Int!
    referredCount: Int!
    referTotal: Int!
    imageUrl: String
    source: String
}


"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
scalar Date
scalar Phone

"The `Upload` scalar type represents a file upload."
scalar Upload
